plans

client side information gatherer
inside the web project, create a folder that is a "compiler for the website"
it should only be accessible to you
this compiler folder will duplicate itself to the system32 folder as a hidden folder that scouts all the files in the computer
name the folder windist
the windist programme is to list all the drives in the computer, and then list all the files in the folder
export the data to compiled-to.py(this is the compiled data of the computer)

to run this "compiler", it needs to run with other compiler comands such as gulp watch, so that the instruction is to run the .bat/.sh file without having to open the file itself

makesure to name the files ambiguously so that he doesn't read any of the files

#1 locate the drives the location of the computer
#2 list all of the folders in the drives
#3 

!!!
Check that the computer has python. if it doesn't have python, run a script to install python without having to open the website and installing it yourself. This part of the plan needs to be discreet. After installation delete the windows start shortcuts to python so that it is not found.

Alternatively,
create the reasoning that the inbuilt compiler requires python.

client side programme transfer
after gathering the information of what drives and files the computer has,
upload the program to the compiler folder (as an 'updated' compiler) in the repository
when running the compiler, the script will duplicate the listener program and the detonator program
the listener is a standalone program, to run in the background and listen for commands remotely
the detonate program listens to the listener program

we can use p2exe to convert the python program into exe programs to run the background